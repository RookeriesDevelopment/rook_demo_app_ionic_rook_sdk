import { RookSDK } from '../plugin';
import { isValidDate } from '../utils/isValidDate';
export const RookEvents = {
    syncEvents: () => {
        return RookSDK.syncEvents();
    },
    syncPhysicalEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncPhysicalEvents(props);
    },
    syncBloodGlucoseEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncBloodGlucoseEvents(props);
    },
    syncBloodPressureEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncBloodPressureEvents(props);
    },
    syncBodyMetricsEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncBodyMetricsEvents(props);
    },
    syncBodyHeartRateEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncBodyHeartRateEvents(props);
    },
    syncPhysicalHeartRateEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncPhysicalHeartRateEvents(props);
    },
    syncHydrationEvents: (props) => {
        isValidDate(props.date);
        isValidDate(props.date);
        return RookSDK.syncHydrationEvents(props);
    },
    syncNutritionEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncNutritionEvents(props);
    },
    syncBodyOxygenationEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncBodyOxygenationEvents(props);
    },
    syncPhysicalOxygenationEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncPhysicalOxygenationEvents(props);
    },
    syncTemperatureEvents: (props) => {
        isValidDate(props.date);
        return RookSDK.syncTemperatureEvents(props);
    },
    syncPendingEvents: () => {
        return RookSDK.syncPendingEvents();
    },
};
//# sourceMappingURL=RookEvents.js.map