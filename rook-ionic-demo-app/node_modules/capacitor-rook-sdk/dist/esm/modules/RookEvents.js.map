{"version":3,"file":"RookEvents.js","sourceRoot":"","sources":["../../../src/modules/RookEvents.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAEnD,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,UAAU,EAAE,GAAwB,EAAE;QACpC,OAAO,OAAO,CAAC,UAAU,EAAE,CAAC;IAC9B,CAAC;IAED,kBAAkB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QAC5D,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,sBAAsB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QAChE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,uBAAuB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QACjE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,qBAAqB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QAC/D,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,uBAAuB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QACjE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,2BAA2B,EAAE,CAAC,KAAgB,EAAuB,EAAE;QACrE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,mBAAmB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QAC7D,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,mBAAmB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QAC7D,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,yBAAyB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QACnE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,6BAA6B,EAAE,CAAC,KAAgB,EAAuB,EAAE;QACvE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED,qBAAqB,EAAE,CAAC,KAAgB,EAAuB,EAAE;QAC/D,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,iBAAiB,EAAE,GAAwB,EAAE;QAC3C,OAAO,OAAO,CAAC,iBAAiB,EAAE,CAAC;IACrC,CAAC;CACF,CAAC","sourcesContent":["import type { BoolResult, DateProps } from '../definitions';\nimport { RookSDK } from '../plugin';\nimport { isValidDate } from '../utils/isValidDate';\n\nexport const RookEvents = {\n  syncEvents: (): Promise<BoolResult> => {\n    return RookSDK.syncEvents();\n  },\n\n  syncPhysicalEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncPhysicalEvents(props);\n  },\n\n  syncBloodGlucoseEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncBloodGlucoseEvents(props);\n  },\n\n  syncBloodPressureEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncBloodPressureEvents(props);\n  },\n\n  syncBodyMetricsEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncBodyMetricsEvents(props);\n  },\n\n  syncBodyHeartRateEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncBodyHeartRateEvents(props);\n  },\n\n  syncPhysicalHeartRateEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncPhysicalHeartRateEvents(props);\n  },\n\n  syncHydrationEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    isValidDate(props.date);\n    return RookSDK.syncHydrationEvents(props);\n  },\n\n  syncNutritionEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncNutritionEvents(props);\n  },\n\n  syncBodyOxygenationEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncBodyOxygenationEvents(props);\n  },\n\n  syncPhysicalOxygenationEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncPhysicalOxygenationEvents(props);\n  },\n\n  syncTemperatureEvents: (props: DateProps): Promise<BoolResult> => {\n    isValidDate(props.date);\n    return RookSDK.syncTemperatureEvents(props);\n  },\n\n  syncPendingEvents: (): Promise<BoolResult> => {\n    return RookSDK.syncPendingEvents();\n  },\n};\n"]}