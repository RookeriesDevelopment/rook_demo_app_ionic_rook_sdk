{
  "api": {
    "name": "RookSDKPlugin",
    "slug": "rooksdkplugin",
    "docs": "",
    "tags": [],
    "methods": [],
    "properties": [
      {
        "name": "initRook",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "InitRookProps"
        ],
        "type": "(props: InitRookProps) => Promise<boolean>"
      },
      {
        "name": "updateUserId",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "UpdateUserIdProps"
        ],
        "type": "(props: UpdateUserIdProps) => Promise<boolean>"
      },
      {
        "name": "getUserId",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "UserIdResult"
        ],
        "type": "() => Promise<UserIdResult>"
      },
      {
        "name": "clearUserId",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "enableAppleHealthSync",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "disableAppleHealthSync",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "isAppleHealthSyncEnable",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "syncUserTimeZone",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "checkAvailability",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "CheckAvailabilityResponse"
        ],
        "type": "() => Promise<CheckAvailabilityResponse>"
      },
      {
        "name": "requestAllAppleHealthPermissions",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "requestAllHealthConnectPermissions",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "requestAllPermissions",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "openIOSAppleHealth",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "openHealthConnectSettings",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "healthConnectHasPermissions",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "requestAndroidBackgroundPermissions",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "type": "() => Promise<boolean>"
      },
      {
        "name": "enableBackGroundUpdates",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BoolResult"
        ],
        "type": "() => Promise<BoolResult>"
      },
      {
        "name": "disableBackGroundUpdates",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BoolResult"
        ],
        "type": "() => Promise<BoolResult>"
      },
      {
        "name": "scheduleYesterdaySync",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "ConfigurationDoOnEndProps",
          "BoolResult"
        ],
        "type": "(props: ConfigurationDoOnEndProps) => Promise<BoolResult>"
      },
      {
        "name": "shouldSyncFor",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "ShouldSyncProps",
          "BoolResult"
        ],
        "type": "(props: ShouldSyncProps) => Promise<BoolResult>"
      },
      {
        "name": "syncSleepSummary",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncBodySummary",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncPhysicalSummary",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "reSyncFailedSummaries",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BoolResult"
        ],
        "type": "() => Promise<BoolResult>"
      },
      {
        "name": "syncSummaries",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BoolResult"
        ],
        "type": "() => Promise<BoolResult>"
      },
      {
        "name": "syncYesterdaySummaries",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BoolResult"
        ],
        "type": "() => Promise<BoolResult>"
      },
      {
        "name": "syncEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BoolResult"
        ],
        "type": "() => Promise<BoolResult>"
      },
      {
        "name": "syncPhysicalEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncBloodGlucoseEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncBloodPressureEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncBodyMetricsEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncBodyHeartRateEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncPhysicalHeartRateEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncHydrationEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncNutritionEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncBodyOxygenationEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncPhysicalOxygenationEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncTemperatureEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DateProps",
          "BoolResult"
        ],
        "type": "(props: DateProps) => Promise<BoolResult>"
      },
      {
        "name": "syncPendingEvents",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BoolResult"
        ],
        "type": "() => Promise<BoolResult>"
      }
    ]
  },
  "interfaces": [],
  "enums": [],
  "typeAliases": [
    {
      "name": "InitRookProps",
      "slug": "initrookprops",
      "docs": "",
      "types": [
        {
          "text": "{\n  environment: Environment;\n  clientUUID: string;\n  password: string;\n  enableLogs?: boolean;\n}",
          "complexTypes": [
            "Environment"
          ]
        }
      ]
    },
    {
      "name": "Environment",
      "slug": "environment",
      "docs": "",
      "types": [
        {
          "text": "'production'",
          "complexTypes": []
        },
        {
          "text": "'sandbox'",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "UpdateUserIdProps",
      "slug": "updateuseridprops",
      "docs": "",
      "types": [
        {
          "text": "{\n  userId: string;\n}",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "UserIdResult",
      "slug": "useridresult",
      "docs": "",
      "types": [
        {
          "text": "{\n  userId: string;\n}",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "CheckAvailabilityResponse",
      "slug": "checkavailabilityresponse",
      "docs": "",
      "types": [
        {
          "text": "'INSTALLED'",
          "complexTypes": []
        },
        {
          "text": "'NOT_INSTALLED'",
          "complexTypes": []
        },
        {
          "text": "'NOT_SUPPORTED'",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "BoolResult",
      "slug": "boolresult",
      "docs": "",
      "types": [
        {
          "text": "{\n  result: boolean;\n}",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "ConfigurationDoOnEndProps",
      "slug": "configurationdoonendprops",
      "docs": "",
      "types": [
        {
          "text": "{\n  doOnEnd: ConfigurationDoOnEnd;\n}",
          "complexTypes": [
            "ConfigurationDoOnEnd"
          ]
        }
      ]
    },
    {
      "name": "ConfigurationDoOnEnd",
      "slug": "configurationdoonend",
      "docs": "",
      "types": [
        {
          "text": "'oldest'",
          "complexTypes": []
        },
        {
          "text": "'latest'",
          "complexTypes": []
        },
        {
          "text": "'nothing'",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "ShouldSyncProps",
      "slug": "shouldsyncprops",
      "docs": "",
      "types": [
        {
          "text": "{\n  type: HealthDataType;\n  date: string;\n}",
          "complexTypes": [
            "HealthDataType"
          ]
        }
      ]
    },
    {
      "name": "HealthDataType",
      "slug": "healthdatatype",
      "docs": "",
      "types": [
        {
          "text": "'SLEEP_SUMMARY'",
          "complexTypes": []
        },
        {
          "text": "'PHYSICAL_SUMMARY'",
          "complexTypes": []
        },
        {
          "text": "'BODY_SUMMARY'",
          "complexTypes": []
        },
        {
          "text": "'PHYSICAL_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'BLOOD_GLUCOSE_BODY_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'BLOOD_PRESSURE_BODY_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'BODY_METRICS_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'HEART_RATE_BODY_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'HEART_RATE_PHYSICAL_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'HYDRATION_BODY_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'NUTRITION_BODY_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'OXYGENATION_BODY_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'OXYGENATION_PHYSICAL_EVENT'",
          "complexTypes": []
        },
        {
          "text": "'TEMPERATURE_BODY_EVENT'",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "DateProps",
      "slug": "dateprops",
      "docs": "",
      "types": [
        {
          "text": "{\n  date: string;\n}",
          "complexTypes": []
        }
      ]
    }
  ],
  "pluginConfigs": []
}